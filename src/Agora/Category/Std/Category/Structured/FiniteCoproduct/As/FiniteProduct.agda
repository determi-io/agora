-- SPDX-FileCopyrightText: 2024 Maxim Urschumzew <mxmurw@determi.io>
--
-- SPDX-License-Identifier: MIT

module Agora.Category.Std.Category.Structured.FiniteCoproduct.As.FiniteProduct where

open import Agora.Conventions hiding (_Ріћ_)
open import Agora.Setoid.Definition
open import Agora.Algebra.Monoid.Definition
open import Agora.Category.Std.Category.Definition
open import Agora.Category.Std.Category.Opposite
open import Agora.Category.Std.Morphism.Iso
open import Agora.Category.Std.Limit.Specific.Coproduct.Definition
open import Agora.Category.Std.Limit.Specific.Coproduct.Instance.Product
open import Agora.Category.Std.Limit.Specific.Product


module _ {­Юњъ : Category ­ЮЉќ} {{_ : hasFiniteCoproducts ­Юњъ}} where
  instance
    hasProducts:рхњрхќ : hasProducts (­Юњъ рхњрхќ)
    hasProducts._РіЊ_ hasProducts:рхњрхќ = _Ріћ_
    hasProducts.isProduct:РіЊ hasProducts:рхњрхќ = it

    hasTerminal:рхњрхќ : hasTerminal (­Юњъ рхњрхќ)
    hasTerminal.Ріц hasTerminal:рхњрхќ = РіЦ
    hasTerminal.isTerminal:Ріц hasTerminal:рхњрхќ = it
  instance
    hasFiniteProducts:рхњрхќ : hasFiniteProducts (­Юњъ рхњрхќ)
    hasFiniteProducts.hasTerminal:this hasFiniteProducts:рхњрхќ = hasTerminal:рхњрхќ
    hasFiniteProducts.hasProducts:this hasFiniteProducts:рхњрхќ = hasProducts:рхњрхќ



