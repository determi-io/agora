
module Agora.Category.Std.Category.Opposite.Instance.FiniteCoproductCategory where

open import Agora.Conventions

open import Agora.Setoid
open import Agora.Category.Std.Category.Definition
open import Agora.Category.Std.Category.Opposite.Definition

open import Agora.Category.Std.Limit.Specific.Coproduct.Definition
open import Agora.Category.Std.Limit.Specific.Product

module _ {­Юњъ : Category ­ЮЉќ} {{_ : hasProducts ­Юњъ}} where

  instance
    hasCoproducts:рхњрхќ-­Юљѓ­Юљџ­ЮљГ : hasCoproducts (­Юњъ рхњрхќРї»)
    hasCoproducts:рхњрхќ-­Юљѓ­Юљџ­ЮљГ = {!!}

  instance
    hasFiniteCoproducts:рхњрхќ-­Юљѓ­Юљџ­ЮљГ : hasFiniteCoproducts (­Юњъ рхњрхќРї»)
    hasFiniteCoproducts:рхњрхќ-­Юљѓ­Юљџ­ЮљГ = {!!}





