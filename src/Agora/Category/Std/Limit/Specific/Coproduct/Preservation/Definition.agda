-- SPDX-FileCopyrightText: 2024 Maxim Urschumzew <mxmurw@determi.io>
--
-- SPDX-License-Identifier: MIT

module Agora.Category.Std.Limit.Specific.Coproduct.Preservation.Definition where

open import Agora.Conventions hiding (_‚äî_)
open import Agora.Setoid
-- open import Agora.Data.Fin.Definition
open import Agora.Data.Product.Definition
open import Agora.Data.Sum.Definition
open import Agora.Category.Std.Category.Definition
open import Agora.Category.Std.Functor.Definition
open import Agora.Category.Std.Morphism.Iso
open import Agora.Category.Std.Category.Notation.Associativity

open import Agora.Category.Std.Limit.Specific.Coproduct.Definition


-- module _ {ùíû : ùí∞ ùëñ} {{_ : isCategory {ùëó} ùíû}} {ùíü : ùí∞ ùëò} {{_ : isCategory {ùëñ} ùíü}} where


module _ {ùíû : Category ùëñ} {ùíü : Category ùëó} where
  record preservesCoproduct (F : Functor ùíû ùíü) (a b x : ‚ü® ùíû ‚ü©) {{_ : isCoproduct a b x}} : ùí∞ (ùëñ ÔΩ§ ùëó) where
    field {{preserve-isCoproduct}} : isCoproduct (‚ü® F ‚ü© a) (‚ü® F ‚ü© b) (‚ü® F ‚ü© x)
    field preserve-Œπ‚ÇÄ : map {{of F}} Œπ‚ÇÄ ‚àº Œπ‚ÇÄ
    field preserve-Œπ‚ÇÅ : map {{of F}} Œπ‚ÇÅ ‚àº Œπ‚ÇÅ

  open preservesCoproduct {{...}} public

  record preservesInitial (F : Functor ùíû ùíü) (a : ‚ü® ùíû ‚ü©) {{_ : isInitial a}} : ùí∞ (ùëñ ÔΩ§ ùëó) where
    field {{preserve-Initial}} : isInitial (‚ü® F ‚ü© a)

  open preservesInitial {{...}} public

  module _ {{_ : hasFiniteCoproducts ùíû}} where
    record isFiniteCoproductPreserving (F : Functor ùíû ùíü) : ùí∞ (ùëñ ÔΩ§ ùëó) where
      field {{preservesCoproducts:this}} : ‚àÄ{a b : ‚ü® ùíû ‚ü©} -> preservesCoproduct F a b (a ‚äî b)
      field {{preservesInitial:this}} : preservesInitial F ‚ä•

    open isFiniteCoproductPreserving {{...}} public


    module _ {F : Functor ùíû ùíü} {{_ : isFiniteCoproductPreserving F}} {{_ : hasFiniteCoproducts ùíü}} where
      preserves-‚äî : ‚àÄ{a b : ‚ü® ùíû ‚ü©} -> ‚ü® F ‚ü© (a ‚äî b) ‚âÖ ‚ü® F ‚ü© a ‚äî ‚ü® F ‚ü© b
      preserves-‚äî {a} {b} = ‚âÖ:byIsCoproduct
        where
          instance
            _ : isCoproduct (‚ü® F ‚ü© a) (‚ü® F ‚ü© b) (‚ü® F ‚ü© (a ‚äî b))
            _ = preserve-isCoproduct

      preserves-‚ä• : ‚ü® F ‚ü© ‚ä• ‚âÖ ‚ä•
      preserves-‚ä• = ‚âÖ:byIsInitial





